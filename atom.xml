<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Supreme</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://zhoul.cc/"/>
  <updated>2018-08-18T05:08:13.909Z</updated>
  <id>http://zhoul.cc/</id>
  
  <author>
    <name>周琳</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>promethes</title>
    <link href="http://zhoul.cc//blog/promethes.html"/>
    <id>http://zhoul.cc//blog/promethes.html</id>
    <published>2018-08-18T04:56:13.000Z</published>
    <updated>2018-08-18T05:08:13.909Z</updated>
    
    <content type="html"><![CDATA[<h3 id="promethes架构"><a href="#promethes架构" class="headerlink" title="promethes架构"></a>promethes架构</h3><p><img src="https://camo.githubusercontent.com/df3e3daf7d6809ba82986eb33664a4283314f7a9/68747470733a2f2f63646e2e7261776769742e636f6d2f70726f6d6574686575732f70726f6d6574686575732f653736316630642f646f63756d656e746174696f6e2f696d616765732f6172636869746563747572652e737667" alt="cmd-markdown-logo"></p><p><strong>或者</strong><br><img src="https://camo.githubusercontent.com/3a4e42452a50e36d5f93458bf538c7fd7836782a/68747470733a2f2f70726f6d6574686575732e696f2f6173736574732f6172636869746563747572652e737667" alt="cmd-markdown-logo"></p><h4 id="监控系统架构"><a href="#监控系统架构" class="headerlink" title="监控系统架构"></a>监控系统架构</h4><p><img src="/images/7o3VjTE.png" alt="“图片描述”"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;promethes架构&quot;&gt;&lt;a href=&quot;#promethes架构&quot; class=&quot;headerlink&quot; title=&quot;promethes架构&quot;&gt;&lt;/a&gt;promethes架构&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://camo.githubuserc
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>测试环境重启</title>
    <link href="http://zhoul.cc//blog/%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83%E9%87%8D%E5%90%AF.html"/>
    <id>http://zhoul.cc//blog/测试环境重启.html</id>
    <published>2018-08-10T05:40:00.000Z</published>
    <updated>2018-08-15T04:16:21.086Z</updated>
    
    <content type="html"><![CDATA[<p><strong>环境</strong></p><blockquote><p>所有业务均运行于<code>docker</code>中，通过<code>k8s</code>集群统一管理。业务所需数据库，缓存，消息队列等服务有运行于<code>docker</code>中（k8s-yaml/docker单独启动），也有运行于宿主机中。k8s集群上运行的应用的配置和日志文件则统一挂载在<code>mfs</code>文件系统中。启动k8s前一定要保证依赖服务全部正常运行。</p></blockquote><p><strong>涉及服务</strong></p><blockquote><ul><li>k8s</li><li>数据库</li><li>转发/代理</li><li>zookeeper</li></ul></blockquote><hr><h2 id="启动步骤"><a href="#启动步骤" class="headerlink" title="启动步骤"></a>启动步骤</h2><blockquote><p>1.<strong>首先启动192.168.5.4，dnsmasq</strong><br>2.启动<code>基础服务</code>服务器<br>3.启动mfs集群服务器，顺序：mfsmaster –&gt; metalogger –&gt; chunkserver<br>4.启动k8s集群，顺序：k8s-master –&gt; k8s-masterback –&gt; node<br>6.k8s-master1启动服务，顺序：keepalived –&gt; mfs挂载 –&gt; iptables –&gt; docker –&gt; nginx<br>7.k8s-master2，k8s-node等，顺序：mfs挂载 –&gt; iptables –&gt; docker</p></blockquote><h3 id="1-启动DNS"><a href="#1-启动DNS" class="headerlink" title="1.启动DNS"></a>1.启动DNS</h3><blockquote><p>服务器：<code>192.168.5.4</code><br>某些服务器和容器dns配置的是公司内部DNS，如果dns不启动，会出现网络故障</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo /usr/sbin/dnsmasq -r /etc/resolv.dnsmasq.conf</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ps -ef |grep dnsmasq</span></span><br></pre></td></tr></table></figure><p><code>启动其他代理</code><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 手动执行rc.local文件中的ssh相关命令</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vim /etc/rc.local</span></span><br></pre></td></tr></table></figure></p><h2 id="2-mfs和nfs"><a href="#2-mfs和nfs" class="headerlink" title="2.mfs和nfs"></a>2.mfs和nfs</h2><p><code>mfs集群</code></p><blockquote><p><strong>备份集群</strong><br>登录192.168.4.139:9425查看集群状态<br>master : 192.168.4.139<br>metalogger : 192.168.4.140<br>chunkserver : 其他</p></blockquote><blockquote><p><strong>业务集群</strong><br>登录192.168.5.71:9425查看集群状态<br>master : 192.168.5.71<br>metalogger : 192.168.5.72<br>chunkserver : 192.168.5.50(nfs)</p></blockquote><h2 id="3-jenkins-web"><a href="#3-jenkins-web" class="headerlink" title="3. jenkins-web"></a>3. jenkins-web</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 192.168.4.193</span></span><br><span class="line">$ sudo<span class="built_in"> service </span>nginx start</span><br></pre></td></tr></table></figure><h2 id="4-启动基础服务"><a href="#4-启动基础服务" class="headerlink" title="4.启动基础服务"></a>4.启动基础服务</h2><h3 id="redis"><a href="#redis" class="headerlink" title="redis"></a>redis</h3><p><code>xdgc-redis</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 192.168.7.7,xdgc-sso服务使用</span></span><br><span class="line">/opt/redis3/bin/redis-server /opt/redis3/redis.conf &amp;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 192.168.7.7，sso依赖服务</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker start ssorest cas</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> cas服务</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker <span class="built_in">exec</span> -it ssorest bash   </span></span><br><span class="line">/root/tomcat7-rest/bin/startup.sh</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> ssorest服务</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker <span class="built_in">exec</span> -it cas bash</span></span><br><span class="line">/root/tomcat8/bin/catalina.sh start</span><br></pre></td></tr></table></figure><p><code>datag组redis</code><br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 192.168.4.122</span></span><br><span class="line">$ sudo docker <span class="builtin-name">run</span> -p 6379:6379 <span class="attribute">--restart</span>=always -v /home/ubuntu/redis.conf:/data/redis.conf -d  --name dev_redis redis:3.2 redis-server /data/redis.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 192.168.4.42</span></span><br><span class="line">service redis-server restart</span><br><span class="line"></span><br><span class="line"><span class="comment"># 192.168.4.41</span></span><br><span class="line">service redis-server restart</span><br></pre></td></tr></table></figure></p><h2 id="mongo"><a href="#mongo" class="headerlink" title="mongo"></a>mongo</h2><p><code>datag组mongo</code><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 192.168.4.122</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker run -it -d --name=mongo-28000 -v /data/mongo-28000/configdb:/data/configdb -v /data/mongo-28000/db:/data/db -p 28000:27017 --restart=always mongo:3.0.15</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 192.168.4.42，dg组开发环境</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker restart dg-mongo</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker run -it -d --name=dg-mongo -h dg-mongo -p 27017:27017 -v /data/mongodb/data:/data/db -v /data/mongodb/<span class="built_in">log</span>:/data/<span class="built_in">log</span>  regtest.yuanbaopu.com/xdgc/mongo:3.0.14</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 192.168.4.41</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker restart xdgc-mongo</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">##</span></span></span><br><span class="line">本地mongodb web工具： http://adminmongo.yuanbaopu.com/dbApp/app/login</span><br><span class="line">密码：admin</span><br></pre></td></tr></table></figure></p><h2 id="rabbitmq"><a href="#rabbitmq" class="headerlink" title="rabbitmq"></a>rabbitmq</h2><p><code>192.168.5.46</code><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> xdgc rabbitmq</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> service rabbitmq-server restart</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> datag rabbitmq</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker restart dg_rabbitmq</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">##</span></span></span><br><span class="line">本地datag rabbitmq管理页面：http://192.168.5.46:35673/#/</span><br><span class="line">账密：dgbox dgbox2016</span><br></pre></td></tr></table></figure></p><p><code>192.168.4.122</code><br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo docker run -it -d --restart=always -p <span class="number">5672</span>:<span class="number">5672</span> -p <span class="number">15672</span>:<span class="number">15672</span> -h rabbitmq --name rabbitmq -v /app/<span class="symbol">rabbitmq:</span>/var/<span class="class"><span class="keyword">lib</span>/<span class="title">rabbitmq</span> <span class="title">regtest</span>.<span class="title">yuanbaopu</span>.<span class="title">com</span>/<span class="title">datag</span>/<span class="title">rabbitmq</span>:3.6.8<span class="title">v2</span></span></span><br></pre></td></tr></table></figure></p><h2 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h2><p><code>本地开发</code><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 192.168.4.122，dg组本地开发</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker run --restart=always -h mysql  --name mysql -p 3306:3306 -v /app/mysqldb:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=datag -d mysql:5.5</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 192.168.4.50,zabbix</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo /etc/init.d/mysql start</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 192.168.4.25,市民卡master</span></span><br><span class="line">/etc/init.d/mysql start</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 192.168.4.46,市民卡slave</span></span><br><span class="line">/etc/init.d/mysqld start</span><br></pre></td></tr></table></figure></p><h2 id="zookeeper"><a href="#zookeeper" class="headerlink" title="zookeeper"></a>zookeeper</h2><p><code>测试集群</code><br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># <span class="number">192.168</span><span class="number">.5</span><span class="number">.43</span>,节点<span class="number">1</span></span><br><span class="line">$ sudo /opt/zookeeper<span class="number">-3.4</span><span class="number">.8</span>/bin/zkServer.sh start/stop</span><br><span class="line"></span><br><span class="line"># <span class="number">192.168</span><span class="number">.4</span><span class="number">.42</span>,节点<span class="number">2</span></span><br><span class="line">$ sudo /opt/zookeeper<span class="number">-3.4</span><span class="number">.8</span>/bin/zkServer.sh start/stop</span><br><span class="line"></span><br><span class="line"># <span class="number">192.168</span><span class="number">.4</span><span class="number">.41</span>,节点<span class="number">3</span></span><br><span class="line">$ sudo /opt/zookeeper<span class="number">-3.4</span><span class="number">.8</span>/bin/zkServer.sh start/stop</span><br></pre></td></tr></table></figure></p><p><code>内网可用连接</code><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 192.168.4.193,迁移</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo /opt/qianyi_zookeeper/bin/zkServer.sh start/stop</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 192.168.4.193,测试</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo /opt/test_zookeeper/bin/zkServer.sh start/stop</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 192.168.4.193,开发</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo /opt/zookeeper-3.4.6/bin/zkServer.sh start/stop</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 192.168.4.193,数据贷</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo /opt/sjd_zookeeper/bin/zkServer.sh start/stop</span></span><br></pre></td></tr></table></figure></p><p><code>zookeeper-web</code></p><blockquote><p>运行jenkins发布</p></blockquote><p><img src="/images/QQ图片20180810154141.png" alt="“图片描述”"></p><p>检测web端是否运行<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo ss -tunlp|grep 8901</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo ss -tunlp|grep 3009</span></span><br></pre></td></tr></table></figure></p><p>如果web能显示不能打开，运行以下命令<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nohup java -Dresources.dir=resources/ -jar xdgc_openapi<span class="selector-class">.jar</span> --spring<span class="selector-class">.config</span><span class="selector-class">.location</span>=resources/ &amp;</span><br></pre></td></tr></table></figure></p><p>另外,不知道是否需要运行node-zk<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /opt/<span class="keyword">node</span><span class="title">-zk-browser</span>/<span class="literal">start</span>.sh</span><br></pre></td></tr></table></figure></p><h2 id="5-k8s集群"><a href="#5-k8s集群" class="headerlink" title="5. k8s集群"></a>5. k8s集群</h2><p><code>k8s-master1</code></p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 挂载，先切换至root用户sudo su</span></span><br><span class="line"><span class="string">/usr/bin/mfsmount</span> -o nonempty <span class="string">/data</span> -H mfsmaster</span><br><span class="line"></span><br><span class="line">mount -t nfs -o rw,hard,nointr,noac,vers=3,rsize=32768,wsize=32768 192.168.5.50:<span class="string">/mnt/nfs/logs</span> <span class="string">/data/logs</span></span><br><span class="line">nohup <span class="string">/home/ubuntu/xdgc_sms/bin/exec.sh</span> &amp;</span><br><span class="line"></span><br><span class="line">mount -t cifs -o username=logs,password=123456 <span class="string">//192.168.4.124/logs</span> <span class="string">/data/logs/datag_dgafterloan_worker/4.124</span></span><br><span class="line"></span><br><span class="line">mount -t cifs -o username=logs,password=123456 <span class="string">//192.168.4.117/logs</span> <span class="string">/data/logs/datag_dgtax_worker/4.117</span></span><br><span class="line"></span><br><span class="line">mount -t cifs -o username=logs,password=123456 <span class="string">//192.168.4.171/logs</span> <span class="string">/data/logs/datag_dgtax_worker/4.171</span></span><br><span class="line"></span><br><span class="line">mount -t cifs -o username=logs,password=123456 <span class="string">//192.168.4.170/logs</span> <span class="string">/data/logs/datag_jd_worker/4.170</span></span><br><span class="line"></span><br><span class="line">mount -t cifs -o username=logs,password=123456 <span class="string">//192.168.4.165/logs</span> <span class="string">/data/logs/datag_jd_catch/4.165</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">**其他服务**</span><br><span class="line"></span><br><span class="line"><span class="comment"># keepalived</span></span><br><span class="line">开机自启动</span><br><span class="line"></span><br><span class="line"><span class="comment"># nginx</span></span><br><span class="line">$ sudo service nginx start</span><br><span class="line"></span><br><span class="line"><span class="comment"># haproxy</span></span><br><span class="line">$ sudo service haproxy start</span><br><span class="line"></span><br><span class="line"><span class="comment"># samba</span></span><br><span class="line">$ sudo docker start samba</span><br><span class="line"></span><br><span class="line"><span class="comment"># iptables</span></span><br><span class="line">$ sudo bash <span class="string">/data/conf/kube_conf/scripts/accept.sh</span> &gt; <span class="string">/dev/null</span> 2&gt;&amp;1 &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 短信网关</span></span><br><span class="line">nohup <span class="string">/home/ubuntu/xdgc_sms/bin/exec.sh</span> &amp;</span><br></pre></td></tr></table></figure><p><code>k8s-master2</code><br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 挂载</span></span><br><span class="line">/usr/bin/mfsmount -o nonempty /data -H mfsmaster</span><br><span class="line"></span><br><span class="line">mount -t nfs -o rw,hard,nointr,noac,<span class="attribute">vers</span>=3,rsize=32768,wsize=32768 192.168.5.50:/mnt/nfs/logs /data/logs</span><br><span class="line"></span><br><span class="line"><span class="comment"># haproxy</span></span><br><span class="line">$ sudo<span class="built_in"> service </span>haproxy start</span><br><span class="line"></span><br><span class="line"><span class="comment"># nginx</span></span><br><span class="line">$ sudo<span class="built_in"> service </span>nginx start</span><br><span class="line"></span><br><span class="line"><span class="comment"># iptables</span></span><br><span class="line">$ sudo bash /data/conf/kube_conf/scripts/accept.sh &gt; /dev/<span class="literal">null</span> 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure></p><p><code>node， harbor(5.37)， standalone(5.70)</code></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 挂载</span></span><br><span class="line">/usr/bin/mfsmount -o nonempty /data -H mfsmaster</span><br><span class="line"></span><br><span class="line">mount -t nfs -o rw,hard,nointr,noac,vers=<span class="number">3</span>,rsize=<span class="number">32768</span>,wsize=<span class="number">32768</span> <span class="number">192.168</span>.<span class="number">5.50</span><span class="symbol">:/mnt/nfs/logs</span> /data/logs</span><br><span class="line"></span><br><span class="line"><span class="comment"># iptables</span></span><br><span class="line"><span class="variable">$ </span>sudo bash /data/conf/kube_conf/scripts/accept.sh &gt; <span class="regexp">/dev/null</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span> &amp;</span><br></pre></td></tr></table></figure><p><code>192.168.4.41  192.168.4.42 192.168.5.46 192.168.5.43</code><br><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># iptables</span></span><br><span class="line">$ sudo bash <span class="meta-keyword">/data/</span>conf/kube_conf<span class="meta-keyword">/scripts/</span>accept.sh &gt; <span class="meta-keyword">/dev/</span>null <span class="number">2</span>&gt;<span class="variable">&amp;1</span> &amp;</span><br></pre></td></tr></table></figure></p><h2 id="6-crowd"><a href="#6-crowd" class="headerlink" title="6.crowd"></a>6.crowd</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> nginx</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo service nginx start</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> crowd</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo bash /data/atlassian/atlassian-crowd-2.7.2/start_crowd.sh</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> confluence</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo bash /data/atlassian/confluence/bin/startup.sh</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> jira</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo bash /data/atlassian/atlassian-jira-6.3.12-standalone/bin/startup.sh</span></span><br></pre></td></tr></table></figure><h2 id="7-maven-nexus仓库"><a href="#7-maven-nexus仓库" class="headerlink" title="7. maven/nexus仓库"></a>7. maven/nexus仓库</h2><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># <span class="number">192.168</span><span class="number">.4</span><span class="number">.107</span></span><br><span class="line">$ /data/nexus<span class="number">-2.8</span><span class="number">.1</span><span class="number">-01</span>/bin/nexus start</span><br></pre></td></tr></table></figure><h2 id="8-haproxy"><a href="#8-haproxy" class="headerlink" title="8. haproxy"></a>8. haproxy</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 192.168.4.49</span></span><br><span class="line">$ sudo<span class="built_in"> service </span>haproxy start</span><br></pre></td></tr></table></figure><h2 id="故障解决"><a href="#故障解决" class="headerlink" title="故障解决"></a>故障解决</h2><p>1.k8s故障<br>etcd集群，flanneld，127.0.0.1端口访问，服务访问故障（服务没启动）</p><p>2.mfs故障<br>挂载失败，找不到文件等<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> mfsfileinfo application.properties</span></span><br></pre></td></tr></table></figure></p><p>3.zk故障<br>没有启动zk-web</p><p>4.网络故障<br>iptables  flanneld重启</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;环境&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;所有业务均运行于&lt;code&gt;docker&lt;/code&gt;中，通过&lt;code&gt;k8s&lt;/code&gt;集群统一管理。业务所需数据库，缓存，消息队列等服务有运行于&lt;code&gt;docker&lt;/code&gt;中（
      
    
    </summary>
    
      <category term="系统" scheme="http://zhoul.cc/categories/%E7%B3%BB%E7%BB%9F/"/>
    
    
  </entry>
  
  <entry>
    <title>lamba表达式</title>
    <link href="http://zhoul.cc//blog/lamba%E5%87%BD%E6%95%B0.html"/>
    <id>http://zhoul.cc//blog/lamba函数.html</id>
    <published>2018-08-03T02:01:00.000Z</published>
    <updated>2018-08-03T14:40:29.123Z</updated>
    
    <content type="html"><![CDATA[<h3 id="lamba表达式"><a href="#lamba表达式" class="headerlink" title="lamba表达式"></a>lamba表达式</h3><blockquote><p>可以使用 Lambda 表达式创建匿名函数，即没有名称的函数。lambda 表达式非常适合快速创建在代码中以后不会用到的函数。尤其对高阶函数或将其他函数作为参数的函数来说，非常实用。</p></blockquote><p>例如，可以使用 <code>lambda</code> 表达式将以下函数<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">multiply</span><span class="params">(x, y)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> x * y</span><br></pre></td></tr></table></figure></p><p>简写为：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">double = <span class="keyword">lambda</span> x, y: x * y</span><br></pre></td></tr></table></figure></p><h5 id="Lambda-函数的组成部分"><a href="#Lambda-函数的组成部分" class="headerlink" title="Lambda 函数的组成部分"></a>Lambda 函数的组成部分</h5><p>1.关键字 lambda 表示这是一个 lambda 表达式。</p><p>2.lambda 之后是该匿名函数的一个或多个参数（用英文逗号分隔），然后是一个英文冒号 :。和函数相似，lambda 表达式中的参数名称是随意的。</p><p>3.最后一部分是被评估并在该函数中返回的表达式，和你可能会在函数中看到的 return 语句很像。</p><p>鉴于这种结构，lambda 表达式不太适合复杂的函数，但是非常适合简短的函数。</p><h5 id="练习：Lambda-与-Map"><a href="#练习：Lambda-与-Map" class="headerlink" title="练习：Lambda 与 Map"></a>练习：Lambda 与 Map</h5><p>map() 是一个高阶内置函数，接受函数和可迭代对象作为输入，并返回一个将该函数应用到可迭代对象的每个元素的迭代器。下面的代码使用 map() 计算 numbers 中每个列表的均值，并创建列表 averages。测试运行这段代码，看看结果如何。</p><p>通过将 mean 函数替换为在 map() 的调用中定义的 lambda 表达式，重写这段代码，使代码更简练。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">numbers = [</span><br><span class="line">              [<span class="number">34</span>, <span class="number">63</span>, <span class="number">88</span>, <span class="number">71</span>, <span class="number">29</span>],</span><br><span class="line">              [<span class="number">90</span>, <span class="number">78</span>, <span class="number">51</span>, <span class="number">27</span>, <span class="number">45</span>],</span><br><span class="line">              [<span class="number">63</span>, <span class="number">37</span>, <span class="number">85</span>, <span class="number">46</span>, <span class="number">22</span>],</span><br><span class="line">              [<span class="number">51</span>, <span class="number">22</span>, <span class="number">34</span>, <span class="number">11</span>, <span class="number">18</span>]</span><br><span class="line">           ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#def mean(num_list):</span></span><br><span class="line"><span class="comment">#    return sum(num_list) / len(num_list)</span></span><br><span class="line"></span><br><span class="line">averages = list(map(<span class="keyword">lambda</span> x: sum(x) / len(x), numbers))</span><br><span class="line">print(averages)</span><br></pre></td></tr></table></figure></p><h5 id="练习：Lambda-与-Filter"><a href="#练习：Lambda-与-Filter" class="headerlink" title="练习：Lambda 与 Filter"></a>练习：Lambda 与 Filter</h5><p>filter() 是一个高阶内置函数，接受函数和可迭代对象作为输入，并返回一个由可迭代对象中的特定元素（该函数针对该元素会返回 True）组成的迭代器。下面的代码使用 filter() 从 cities 中获取长度少于 10 个字符的名称以创建列表 short_cities。测试运行这段代码，看看结果如何。</p><p>通过将 is_short 函数替换为在 filter() 的调用中定义的 lambda 表达式，重写这段代码，使代码更简练。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cities = [<span class="string">"New York City"</span>, <span class="string">"Los Angeles"</span>, <span class="string">"Chicago"</span>, <span class="string">"Mountain View"</span>, <span class="string">"Denver"</span>, <span class="string">"Boston"</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#def is_short(name):</span></span><br><span class="line"> <span class="comment">#   return len(name) &lt; 10</span></span><br><span class="line"></span><br><span class="line">short_cities = list(filter(<span class="keyword">lambda</span> x: len(x) &lt; <span class="number">10</span>, cities))</span><br><span class="line">print(short_cities)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;lamba表达式&quot;&gt;&lt;a href=&quot;#lamba表达式&quot; class=&quot;headerlink&quot; title=&quot;lamba表达式&quot;&gt;&lt;/a&gt;lamba表达式&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;可以使用 Lambda 表达式创建匿名函数，即没有名称的函数。la
      
    
    </summary>
    
      <category term="python" scheme="http://zhoul.cc/categories/python/"/>
    
    
      <category term="函数" scheme="http://zhoul.cc/tags/%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>SVN</title>
    <link href="http://zhoul.cc//blog/hello-world.html"/>
    <id>http://zhoul.cc//blog/hello-world.html</id>
    <published>2018-07-18T10:16:00.000Z</published>
    <updated>2018-08-03T11:51:20.832Z</updated>
    
    <content type="html"><![CDATA[<p>一.日常使用手册</p><p>1.创建svn项目<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># svnadmin create /data/svn/newproject        --svn项目：newproject</span></span><br></pre></td></tr></table></figure></p><p>2.创建用户<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># htpasswd /data/svnauth/passwd newuser       --用户：newuser</span></span><br></pre></td></tr></table></figure></p><p>3.配置仓库权限<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /data/svnauth/authz</span></span><br><span class="line">[groups]                               --配置组，用户</span><br><span class="line">develop = test1,test2,testzl           --格式：组 = 用户       多个用户用逗号隔开</span><br><span class="line">android = test3</span><br><span class="line">admin = zhouladmin</span><br><span class="line">dgg = dg</span><br><span class="line">                                       --不同项目之间空一行隔开</span><br><span class="line">[newproject:/]                         --配置svn项目权限</span><br><span class="line">@develop = rw</span><br><span class="line">@admin = rw</span><br><span class="line">* =</span><br></pre></td></tr></table></figure></p><p>注意：使用浏览器登陆仓库后会保存缓存，导致无法登陆其他仓库，清理浏览器缓存即可</p><p>二、部署</p><p>1.安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># apt-get -y install subversion apache2 libapache2-svn ssl-cert</span></span><br></pre></td></tr></table></figure></p><p>如果apache相关软件无法安装，则换一个安装源再次安装即可</p><p>更换国内源<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mv /etc/apt/sources.list /etc/apt/sources.list.bak</span></span><br><span class="line"><span class="comment"># cat &gt; /etc/apt/sources.list &lt;&lt; EOF    </span></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse  </span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse  </span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse  </span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiverse  </span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse  </span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse  </span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse  </span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse  </span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiverse  </span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse  </span><br><span class="line">EOF</span><br><span class="line"><span class="comment"># apt-get update</span></span><br></pre></td></tr></table></figure></p><p>查看安装版本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># svn –version</span></span><br><span class="line">svn, version 1.8.8 (r1568071)</span><br><span class="line">   compiled Aug 10 2017, 17:20:39 on x86_64-pc-linux-gnu</span><br></pre></td></tr></table></figure></p><p>  2.配置</p><p>2.1svn仓库基本配置</p><p>创建svn仓库存储路径<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir -p /data/svn</span></span><br></pre></td></tr></table></figure></p><p>修改/data目录属性</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chown -R www-data:www-data /data/</span></span><br><span class="line"><span class="comment"># chmod 755 -R /data/</span></span><br></pre></td></tr></table></figure><p>2.2创建svn仓库<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># svnadmin create /data/svn/devroot         --仓库名：devroot</span></span><br></pre></td></tr></table></figure></p><p>2.3svn仓库权限配置</p><p>svn仓库权限，可以进行单独配置，也可以进行统一配置。考虑实际情况，一般会有多个svn仓库，这里采用统一配置。</p><p>创建用于管理所有仓库帐号密码、权限控制等的目录svnauth<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir -p /data/svnauth/</span></span><br></pre></td></tr></table></figure></p><p>创建svn仓库权限的总控制文件svnserve.conf<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /data/svnauth/svnserve.conf</span></span><br><span class="line">[general]</span><br><span class="line"><span class="comment">#未鉴定的用户无权限访问该版本库</span></span><br><span class="line">anon-access = none</span><br><span class="line"></span><br><span class="line"><span class="comment">#鉴定后的可读写版本库</span></span><br><span class="line">auth-access = write</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用的密码文件是同级路径的passwd文件，即是/data/svnaut/passwd</span></span><br><span class="line">password-db = passwd</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用的权限控制文件是同级路径的authz文件，即是/data/svndauth/authz</span></span><br><span class="line">authz-db = authz</span><br><span class="line"></span><br><span class="line"><span class="comment">#realm指定版本库的认证域，即在登录时提示的认证域名称。各个仓库的认证域都可以自定义</span></span><br><span class="line">realm = svnauth</span><br></pre></td></tr></table></figure></p><p><img src="/images/1531724442366.jpg" alt="“图片描述”"></p><p>创建passwd文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># touch /data/svnauth/passwd</span></span><br></pre></td></tr></table></figure></p><p>创建authz文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /data/svndata/authz</span></span><br><span class="line">[groups]             //用户组配置</span><br><span class="line">develop = test1,test2,testzl           //定义develop用户组成员test1,test2,testzl</span><br><span class="line">android = test3</span><br><span class="line">admin = zhouladmin</span><br><span class="line">dgg = dg</span><br><span class="line"></span><br><span class="line">[devroot:/]                     //仓库权限配置，仓库名：devroot</span><br><span class="line">@develop = rw                    //develop用户组具有读（r）写(w)权限</span><br><span class="line">@admin = rw</span><br><span class="line">* =                          //其他用户和组没有访问权限</span><br></pre></td></tr></table></figure></p><p><img src="/images/1531725835361.jpg" alt="“图片描述”"></p><p>2.4配置访问方式（此处为https）</p><p>配置apache2<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/apache2/mods-available/dav_svn.conf</span></span><br><span class="line">&lt;Location /repos&gt;</span><br><span class="line">   DAV svn</span><br><span class="line">   SVNParentPath /data/svn</span><br><span class="line">   AuthzSVNAccessFile /data/svnauth/authz</span><br><span class="line">   AuthType Basic</span><br><span class="line">   AuthName <span class="string">"Authorization Realm"</span></span><br><span class="line">   AuthUserFile /data/svnauth/passwd</span><br><span class="line">   Require valid-user</span><br><span class="line">   SSLRequireSSL</span><br><span class="line">&lt;/Location&gt;</span><br></pre></td></tr></table></figure></p><p>启用ssl模块<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># a2enmod ssl</span></span><br></pre></td></tr></table></figure></p><p>如果没有a2enmod指令，也可直接在apache2.conf中设置SSL模块加载，如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LoadModule ssl_module /usr/lib/apache2/modules/mod_ssl.so</span><br></pre></td></tr></table></figure></p><p>启用SSL站点<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># a2ensite default-ssl</span></span><br></pre></td></tr></table></figure></p><p>重启apache<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># service apache2 restart</span></span><br></pre></td></tr></table></figure></p><p>2.5设置svn的用户和密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># htpasswd -cm /data/svnauth/passwd testzl      --创建用户：testzl</span></span><br></pre></td></tr></table></figure><p>配置用户权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /data/svnauth/authz           --配置testzl的组和访问svn仓库的权限</span></span><br></pre></td></tr></table></figure><p><img src="/images/1531726817825.jpg" alt="“图片描述”"></p><p>3.访问测试</p><p>浏览器输入：<a href="https://IP/repos/devroot" target="_blank" rel="noopener">https://IP/repos/devroot</a></p><p><img src="/images/1531726675853.jpg" alt="“图片描述”"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一.日常使用手册&lt;/p&gt;
&lt;p&gt;1.创建svn项目&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;
      
    
    </summary>
    
    
      <category term="版本管理" scheme="http://zhoul.cc/tags/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>rabbitmq添加虚拟主机</title>
    <link href="http://zhoul.cc//blog/Plan.html"/>
    <id>http://zhoul.cc//blog/Plan.html</id>
    <published>2018-03-08T08:27:00.000Z</published>
    <updated>2018-08-03T11:52:16.912Z</updated>
    
    <content type="html"><![CDATA[<p>创建用户（如果没有的话）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rabbitmqctl  add_user test 123456                 --用户：test，密码：123456</span></span><br></pre></td></tr></table></figure><p>创建虚拟主机<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rabbitmqctl add_vhost test_host                   --虚拟主机名：test_host</span></span><br></pre></td></tr></table></figure></p><p>查看虚拟主机列表<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rabbitmqctl list_vhosts</span></span><br></pre></td></tr></table></figure></p><p>配置用户权限（此处为读写权限）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rabbitmqctl set_permissions -p test_host  test ".*" ".*" ".*"         --用户test对test_host虚拟主机具有读写权限</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;创建用户（如果没有的话）&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;c
      
    
    </summary>
    
      <category term="服务" scheme="http://zhoul.cc/categories/%E6%9C%8D%E5%8A%A1/"/>
    
    
      <category term="中间件" scheme="http://zhoul.cc/tags/%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
  </entry>
  
</feed>
